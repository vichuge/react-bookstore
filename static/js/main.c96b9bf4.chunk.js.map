{"version":3,"sources":["components/Book.js","containers/BooksList.js","actionTypes.js","actions/index.js","containers/BookForm.js","components/App.js","reducers/books.js","reducers/index.js","index.js"],"names":["Book","id","title","category","connect","state","books","className","map","v","CREATE_BOOK","REMOVE_BOOK","createBook","book","type","payload","mapDispatchToProps","useState","setTitle","setCategory","onSubmit","e","preventDefault","onChange","target","value","required","name","App","initialState","action","rootReducer","combineReducers","booksReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","dispatch","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6MAaeA,EAVF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAd,OACX,oBAAIF,GAAIA,EAAR,mBAAgBC,EAAhB,aAA0BC,MCsBbC,eAFS,SAACC,GAAD,MAAY,CAAEC,MAAOD,EAAMC,SAEpCF,EArBG,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAH,OAChB,oBAAIC,UAAU,aAAd,SAEID,EAAME,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAEER,GAAIQ,EAAER,GACNC,MAAOO,EAAEP,MACTC,SAAUM,EAAEN,UAHPM,EAAER,Y,QCVJS,EAAc,cACdC,EAAc,cCCdC,EAAa,SAACC,GAAD,MAAW,CACnCC,KAAMJ,EACNK,QAASF,IC8CLG,EAAqB,CACzBJ,cAGaR,cAAQ,KAAMY,EAAdZ,EAjDE,SAAC,GAAoB,IAAlBQ,EAAiB,EAAjBA,WAClB,EAA0BK,mBAAS,IAAnC,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOd,EAAP,KAAiBgB,EAAjB,KAyBA,OACE,uBAAMC,SAVa,SAACC,GACpBT,EAAW,CACTV,QACAC,aAEFe,EAAS,IACTC,EAAY,IACZE,EAAEC,kBAGF,UACE,uBAAOR,KAAK,OAAOS,SAjBF,SAACF,GACpBH,EAASG,EAAEG,OAAOC,QAgB2BA,MAAOvB,EAAOwB,UAAQ,IACjE,yBAAQH,SAfe,SAACF,GAC1BF,EAAYE,EAAEG,OAAOC,QAcmBC,UAAQ,EAACD,MAAOtB,EAAtD,UACE,wBAAsBsB,MAAM,GAA5B,0BAAY,WA5BC,CACjB,SACA,YACA,SACA,QACA,UACA,SACA,UAuBiBjB,KAAI,SAACmB,GAAD,OAAU,wBAAmBF,MAAOE,EAA1B,SAAiCA,GAApBA,SAG1C,uBAAOb,KAAK,SAASW,MAAM,0BC9BlBG,EAPH,kBACV,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCLEC,EAAe,CACnB,CAAE5B,GAAI,EAAGC,MAAO,UAAWC,SAAU,UACrC,CAAEF,GAAI,EAAGC,MAAO,UAAWC,SAAU,cAcxBG,EAXD,WAAmC,IAAlCD,EAAiC,uDAAzBwB,EAAcC,EAAW,uCAC9C,OAAQA,EAAOhB,MACb,KAAKJ,EACH,MAAM,GAAN,mBAAWL,GAAX,CAAkByB,EAAOf,UAC3B,KAAKJ,EAEL,QACE,OAAON,ICNE0B,EAJKC,YAAgB,CAClC1B,MAAO2B,ICIHC,EAAQC,YACZJ,EACAK,OAAOC,8BAAgCD,OAAOC,gCAG1B,CACpB,CAAEpC,GAAI,EAAGC,MAAO,UAAWC,SAAU,UACrC,CAAEF,GAAI,EAAGC,MAAO,UAAWC,SAAU,UAGzBK,KAAI,SAACK,GAAD,OAAUqB,EAAMI,SAAS1B,EAAWC,OAEtD,IAAM0B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,K","file":"static/js/main.c96b9bf4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Book = ({ id, title, category }) => (\n  <li id={id}>{`${title}: ${category}`}</li>\n);\n\nBook.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default Book;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\n\nconst BooksList = ({ books }) => (\n  <ul className=\"books-list\">\n    {\n      books.map((v) => (\n        <Book\n          key={v.id}\n          id={v.id}\n          title={v.title}\n          category={v.category}\n        />\n      ))\n    }\n  </ul>\n);\n\nBooksList.propTypes = {\n  books: PropTypes.objectOf(PropTypes.array).isRequired,\n};\n\nconst mapStateToProps = (state) => ({ books: state.books });\n\nexport default connect(mapStateToProps)(BooksList);\n","export const CREATE_BOOK = 'CREATE_BOOK';\nexport const REMOVE_BOOK = 'REMOVE_BOOK';\n","import { CREATE_BOOK, REMOVE_BOOK } from '../actionTypes';\n\nexport const createBook = (book) => ({\n  type: CREATE_BOOK,\n  payload: book,\n});\n\nexport const deleteBook = (book) => ({\n  type: REMOVE_BOOK,\n  payload: book,\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions';\n\nconst BookForm = ({ createBook }) => {\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const categories = [\n    'Action',\n    'Biography',\n    'Comedy',\n    'Drama',\n    'Fantasy',\n    'Google',\n    'Horror',\n  ];\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleChangeSelect = (e) => {\n    setCategory(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    createBook({\n      title,\n      category,\n    });\n    setTitle('');\n    setCategory('');\n    e.preventDefault();\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={handleChange} value={title} required />\n      <select onChange={handleChangeSelect} required value={category}>\n        <option key=\"default\" value=\"\">Select one...</option>\n        {\n          categories.map((name) => <option key={name} value={name}>{name}</option>)\n        }\n      </select>\n      <input type=\"submit\" value=\"Create new book\" />\n    </form>\n  );\n};\n\nBookForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  createBook,\n};\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n","import React from 'react';\nimport BooksList from '../containers/BooksList';\nimport BookForm from '../containers/BookForm';\n\nconst App = () => (\n  <>\n    <BooksList />\n    <BookForm />\n  </>\n);\n\nexport default App;\n","import { CREATE_BOOK, REMOVE_BOOK } from '../actionTypes';\n\nconst initialState = [\n  { id: 1, title: 'title 1', category: 'Action' },\n  { id: 2, title: 'title 2', category: 'Biography' },\n];\n\nconst books = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_BOOK:\n      return [...state, action.payload];\n    case REMOVE_BOOK:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","import { combineReducers } from 'redux';\n\nimport booksReducer from './books';\n\nconst rootReducer = combineReducers({\n  books: booksReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\nimport { createBook } from './actions';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nconst firstElements = [\n  { id: 3, title: 'title 3', category: 'Comedy' },\n  { id: 4, title: 'title 4', category: 'Drama' },\n];\n\nfirstElements.map((book) => store.dispatch(createBook(book)));\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}