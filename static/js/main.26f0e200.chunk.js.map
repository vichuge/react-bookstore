{"version":3,"sources":["components/Book.js","actionTypes.js","actions/index.js","containers/categories.js","components/CategoryFilter.js","containers/BooksList.js","containers/BookForm.js","components/App.js","reducers/books.js","reducers/filter.js","reducers/index.js","index.js"],"names":["Book","book","handleRemoveBook","id","title","category","type","onClick","className","CREATE_BOOK","REMOVE_BOOK","CHANGE_FILTER","createBook","payload","categories","CategoryFilter","handleChangeList","onChange","e","target","value","map","cat","mapDispatchToProps","deleteBook","changeFilter","connect","state","books","filter","useState","setCategory","b","push","booksFilter","generateId","myIdFloat","Math","random","ceil","setId","setTitle","onSubmit","preventDefault","htmlFor","placeholder","required","name","App","initialState","action","rootReducer","combineReducers","booksReducer","filterReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","dispatch","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.26f0e200.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Book = ({ book, handleRemoveBook }) => {\n  const handleBookRemove = () => {\n    handleRemoveBook(book);\n  };\n  return (\n    <tr key={book.id} id={book.id}>\n      <td>{book.title}</td>\n      <td>{book.category}</td>\n      <td><button type=\"button\" onClick={handleBookRemove} className=\"btn btn-danger\">Delete</button></td>\n    </tr>\n  );\n};\n\nBook.propTypes = {\n  book: PropTypes.objectOf(Object).isRequired,\n  handleRemoveBook: PropTypes.func.isRequired,\n};\n\nexport default Book;\n","export const CREATE_BOOK = 'CREATE_BOOK';\nexport const REMOVE_BOOK = 'REMOVE_BOOK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n","import { CREATE_BOOK, REMOVE_BOOK, CHANGE_FILTER } from '../actionTypes';\n\nexport const createBook = (book) => ({\n  type: CREATE_BOOK,\n  payload: book,\n});\n\nexport const deleteBook = (book) => ({\n  type: REMOVE_BOOK,\n  payload: book,\n});\n\nexport const changeFilter = (category) => ({\n  type: CHANGE_FILTER,\n  payload: category,\n});\n","const categories = [\n  'Action',\n  'Biography',\n  'Comedy',\n  'Drama',\n  'Fantasy',\n  'Google',\n  'Horror',\n];\n\nexport default categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport categories from '../containers/categories';\n\nconst CategoryFilter = ({ handleChangeList }) => {\n  const handleChange = (e) => {\n    handleChangeList(e.target.value);\n  };\n  return (\n    <select className=\"form-control\" onChange={handleChange}>\n      <option key=\"default\" value=\"All\">All books</option>\n      {\n        categories.map((cat) => <option key={cat} value={cat}>{cat}</option>)\n      }\n    </select>\n  );\n};\n\nCategoryFilter.propTypes = {\n  handleChangeList: PropTypes.func.isRequired,\n};\n\nexport default CategoryFilter;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { deleteBook, changeFilter } from '../actions';\nimport CategoryFilter from '../components/CategoryFilter';\n\nconst BooksList = ({\n  books,\n  deleteBook,\n  changeFilter,\n  filter,\n}) => {\n  const [category, setCategory] = useState(filter);\n  const handleRemoveBook = (book) => {\n    deleteBook(book);\n  };\n  const handleChangeList = (category) => {\n    changeFilter(category);\n    setCategory(category);\n  };\n  const booksFilter = () => {\n    if (category === 'All') { return books; }\n    const b = [];\n    books.map((book) => {\n      if (book.category === category) {\n        b.push(book);\n      }\n    });\n    return b;\n  };\n  return (\n    <>\n      <CategoryFilter handleChangeList={handleChangeList} />\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Category</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            booksFilter().map((book) => (\n              <Book\n                key={book.id}\n                book={book}\n                handleRemoveBook={handleRemoveBook}\n              />\n            ))\n          }\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nBooksList.propTypes = {\n  books: PropTypes.objectOf(PropTypes.array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  books: state.books,\n  filter: state.filter,\n});\nconst mapDispatchToProps = { deleteBook, changeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions';\nimport categories from './categories';\n\nconst generateId = () => {\n  const myIdFloat = Math.random() * (1000 - 5) + 5;\n  const myId = Math.ceil(myIdFloat);\n  return myId;\n};\n\nconst BookForm = ({ createBook }) => {\n  const [id, setId] = useState(generateId);\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const handleChange = (e) => setTitle(e.target.value);\n  const handleChangeSelect = (e) => setCategory(e.target.value);\n  const handleChangeId = (e) => setId(e.target.value);\n  const handleSubmit = (e) => {\n    createBook({\n      id,\n      title,\n      category,\n    });\n    setId(generateId);\n    setTitle('');\n    setCategory('');\n    e.preventDefault();\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input type=\"hidden\" value={id} onChange={handleChangeId} />\n        <label htmlFor=\"title\">\n          Title\n          <input placeholder=\"Add a title...\" className=\"form-control\" id=\"title\" type=\"text\" onChange={handleChange} value={title} required />\n        </label>\n      </div>\n      <div className=\"form-group mt-2\">\n        <label htmlFor=\"category\">\n          Category\n          <select className=\"form-control\" onChange={handleChangeSelect} required value={category}>\n            <option key=\"default\" value=\"\">Select one...</option>\n            {\n              categories.map((name) => <option key={name} value={name}>{name}</option>)\n            }\n          </select>\n        </label>\n      </div>\n      <input type=\"submit\" value=\"Create new book\" className=\"btn btn-primary mt-3\" />\n    </form>\n  );\n};\n\nBookForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  createBook,\n};\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n","import React from 'react';\nimport BooksList from '../containers/BooksList';\nimport BookForm from '../containers/BookForm';\n\nconst App = () => (\n  <div>\n    <BooksList />\n    <BookForm />\n  </div>\n);\n\nexport default App;\n","import { CREATE_BOOK, REMOVE_BOOK } from '../actionTypes';\n\nconst initialState = [\n  { id: 1, title: 'title 1', category: 'Action' },\n  { id: 2, title: 'title 2', category: 'Biography' },\n];\n\nconst books = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_BOOK:\n      return [...state, action.payload];\n    case REMOVE_BOOK:\n      return state.filter((book) => book.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","import { CHANGE_FILTER } from '../actionTypes';\n\nconst filter = (state = 'All', action) => {\n  switch (action.type) {\n    case CHANGE_FILTER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","import { combineReducers } from 'redux';\n\nimport booksReducer from './books';\nimport filterReducer from './filter';\n\nconst rootReducer = combineReducers({\n  books: booksReducer,\n  filter: filterReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\nimport { createBook } from './actions';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nconst firstElements = [\n  { id: 3, title: 'title 3', category: 'Comedy' },\n  { id: 4, title: 'title 4', category: 'Drama' },\n];\n\nfirstElements.map((book) => store.dispatch(createBook(book)));\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}